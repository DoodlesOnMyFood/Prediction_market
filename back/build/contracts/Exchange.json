{
  "contractName": "Exchange",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "a",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "b",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "c",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "d",
          "type": "bool"
        }
      ],
      "name": "DistributeEmit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_del_market_id",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_del_tokenKind",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_del_price",
          "type": "uint256"
        }
      ],
      "name": "NoFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NoIndex",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "comp",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "log",
          "type": "string"
        }
      ],
      "name": "RequestEmit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_del_market_id",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_del",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_del_price",
          "type": "uint256"
        }
      ],
      "name": "SuggestRemove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer1",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addToBalance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addToOwnerPW",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        }
      ],
      "name": "balanceOf1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_acceptedPrice",
          "type": "uint256"
        }
      ],
      "name": "distribute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerPW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "request",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_i",
          "type": "uint256"
        }
      ],
      "name": "showCurrent",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "priceYes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "timeYes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "priceNo",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "timeNo",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        }
      ],
      "name": "showRequest",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        }
      ],
      "name": "showSuggest",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "suggest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_del_tokenKind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_del_price",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "suggestChange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        }
      ],
      "name": "totalSupplyOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        }
      ],
      "name": "totalSupplyOf1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_tokenKind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "tradeWant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        }
      ],
      "name": "winnerTokenOf",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_market_id",
          "type": "uint8"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"c\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"d\",\"type\":\"bool\"}],\"name\":\"DistributeEmit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_del_market_id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_del_tokenKind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_del_price\",\"type\":\"uint256\"}],\"name\":\"NoFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NoIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"comp\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"log\",\"type\":\"string\"}],\"name\":\"RequestEmit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_del_market_id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_del\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_del_price\",\"type\":\"uint256\"}],\"name\":\"SuggestRemove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addToBalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addToOwnerPW\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"}],\"name\":\"balanceOf1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_acceptedPrice\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerPW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"request\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"showCurrent\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"priceYes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timeYes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"priceNo\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timeNo\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"}],\"name\":\"showRequest\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"}],\"name\":\"showSuggest\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"suggest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_del_tokenKind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_del_price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"suggestChange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"}],\"name\":\"totalSupplyOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"}],\"name\":\"totalSupplyOf1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_tokenKind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"tradeWant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_market_id\",\"type\":\"uint8\"}],\"name\":\"winnerTokenOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint8)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOf1(address,uint8)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"cap1()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"totalSupplyOf(uint8)\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyOf1(uint8)\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/jisoo/pet-projects/Prediction_market/back/contracts/exchange.sol\":\"Exchange\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"/home/jisoo/pet-projects/Prediction_market/back/contracts/erc20.sol\":{\"keccak256\":\"0xa087b4882fbae117cc8074d2aec5b44b7777ff05a847e940175a979274535ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93b5d423b622f50d1531a5b4cc3028847553be5ac45155931996c1936dd21e87\",\"dweb:/ipfs/QmfPiingXx3NHiBCrCUv9rip4cJx3CDs2LukxqS4W2e6ky\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/erc201.sol\":{\"keccak256\":\"0x4cd8ac56154a51634acc83d9422bb1719bd434c72e0cdde5251e60ccfac26210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e62a1c6672c3ec6ac5cb322382e123bc7060e6279a3331f463d44b72e9ae5a\",\"dweb:/ipfs/QmYjBuq5PKpdMFeGHMq5kkbuFRxmWHp6sz6Zo19mfrigqV\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/erc20Capped.sol\":{\"keccak256\":\"0x92d5513fc94ccbaae5ebd45cb47cd699c73b968e59c90055d64bc91b847a08b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e062e01efc48c80a61ec79be199dab42a4ce8e3a0c1e953f8e664e1746dee42\",\"dweb:/ipfs/QmSwcyiwVtufV2usSsgJTgwP5bR6ouMtXRBuQEKAS3o4ep\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/erc20Capped1.sol\":{\"keccak256\":\"0xde43f7d5bd8df3d7293e2a66f6f70ce649e60352d68e4f11d31b846a7231d9c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c130f1dc8dd4092fb3ad697208efc934b3c22911fff9f013e3374cc55a60132\",\"dweb:/ipfs/QmRaioH7QVqeK3mReE5M6Gva4umo3mANpXfB1ZjzwxVoEs\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/erc20Distribution.sol\":{\"keccak256\":\"0x9e047331e012d2e93caae0083473a2ef056c81b4562cdd6ffd2efee2c6192ca0\",\"urls\":[\"bzz-raw://66327f1514046de06a4d1ee262f93cb1e9fd94c3027f5104be78b0590a4ba81e\",\"dweb:/ipfs/QmZNAaeX4sz2xXrn2svmVW5gDdgLiPJYXwFhSxvjqYvGfx\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/etherTransfer.sol\":{\"keccak256\":\"0x949b6a9b2df90a38b3a0da1764125ed8a34ff3c35479816774c14fbb3257cc36\",\"urls\":[\"bzz-raw://dd0ba0b4f07b81e6edcd6de5d3a5df4d30a19e75745d22ce2b60c07a8c51c340\",\"dweb:/ipfs/QmSrGocMjqjTpqYtnG18U4tKi6kgbABQmK4sZ5wZ1iW4Aq\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/exchange.sol\":{\"keccak256\":\"0xab2ceba04d4a7ce52b815fbfa73112c13addcf9305495485ee7b5641f1000c79\",\"urls\":[\"bzz-raw://031bb37e51abab66c953c9046eef8f7dcdee661785b45314779892d24915e17e\",\"dweb:/ipfs/QmaYEEjXHiDwVsYoxMJra8yvzNjCwmB52gHdtUWjHx6sEF\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/nocoin.sol\":{\"keccak256\":\"0xced1782ca42159f71bebd2226e0f68972016984154d896ba023a09ad187454e2\",\"urls\":[\"bzz-raw://982053ea9424daded7fed749d0e4a61b742cc48d8d7dbaeed2ee59cf6e4c7ad8\",\"dweb:/ipfs/QmVikppPdQkrR8gxkWZLUAGdxHf7RoKzUAsfYgDWPvkWta\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/owner.sol\":{\"keccak256\":\"0x7bf5ffb7097242f46b996cb9a8c283a4aad631bc7654516bfff157a6b95ef9eb\",\"urls\":[\"bzz-raw://752be6d9f2e0a11be865f0cb2cbc7548d22454545a0ef4f2e0d7f4f69a8b519f\",\"dweb:/ipfs/QmRpQKGpKiCzAgq4o9kPjMxV31gC4FdMdo2U5xV7btkzwj\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/safeMath.sol\":{\"keccak256\":\"0xde14010be782f04cdf0c3a02fc6874717f9a47d2faa789ea77c3837c386bf369\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2d5c6d30ee7b129919bb5c1034304e3bd5245169ffc83082394f6163bb15af3\",\"dweb:/ipfs/QmYjRuDQiyFT5XDQadb1bL6gmEKTMqLkqKL92igwSpgn85\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/tokenTrade.sol\":{\"keccak256\":\"0xd3ab3a90e9b0bd383a07b99d6fbd4c08bbbf1b9cfe652e18413d2e65de9fe77a\",\"urls\":[\"bzz-raw://5b11bf9635e2aff238f9e5a3cf474b822412b01b35c31d58476d2236ba86e912\",\"dweb:/ipfs/QmZnsvauwLK5dDzu4iJYs47YJvegi7LF8g9BSVjiJqkLkG\"]},\"/home/jisoo/pet-projects/Prediction_market/back/contracts/yescoin.sol\":{\"keccak256\":\"0xd4f9685f345fbfae18895a3c7563247586c115516755dd85ac0f467e37dd5d55\",\"urls\":[\"bzz-raw://42d5bdf54bb0627bcc3ba122660bdc96bc8db94a8da63cb22e430b15ec068a0a\",\"dweb:/ipfs/QmQVL8upWznCfR1wipb5gfMUe3JXe7KtYa7VANF2ifJzP1\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "52:1040:7:-:0;;;;;;;;;;;;-1:-1:-1;442:5:9;;;;;;;;;;;;;;;;;;;;;449:7;;;;;;;;;;;;;;;432:4:13;;;;;;;;;;;;;;;;;438:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;461:18:10;;-1:-1:-1;;;;;;461:18:10;469:10;461:18;;;2849:12:1;;270:4:9;;449:7;;270:4;;432::13;;438:6;2849:12:1;;;:::i;:::-;-1:-1:-1;2871:16:1;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2897:9:1;:14;;-1:-1:-1;;2897:14:1;2909:2;2897:14;;;-1:-1:-1;441:7:3;433:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;484:4;:10;2868:13:2;;;;:6;;:13;;;;;:::i;:::-;-1:-1:-1;2891:17:2;;;;:8;;:17;;;;;:::i;:::-;-1:-1:-1;;2931:2:2;2918:15;;-1:-1:-1;;2918:15:2;;;;;-1:-1:-1;446:7:4;438:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:5;:11;52:1040:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52:1040:7;;;-1:-1:-1;52:1040:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "52:1040:7:-:0;;;;;;;;-1:-1:-1;;;52:1040:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:117;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:117:7;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;511:578;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;511:578:7;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4267:576:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4267:576:12;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4490:121:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4490:121:2;;;;:::i;:::-;;;;;;;;;;;;;;;;2526:89:6;;;;;;;;;;;;;:::i;580:73:3:-;;;;;;;;;;;;;:::i;1694:323:6:-;;;;;;;;;;;;;:::i;:::-;;2041:293;;;;;;;;;;;;;:::i;2367:127::-;;;;;;;;;;;;;:::i;4614:138:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4614:138:1;;-1:-1:-1;;;;;4614:138:1;;;;;;;;:::i;586:75:4:-;;;;;;;;;;;;;:::i;211:20:10:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;211:20:10;;;;;;;;;;;;;;5605:747:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5605:747:12;;;;;;;;;;;;;;;;;;:::i;2265:1964::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2265:1964:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2483:775:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2483:775:5;;;;;;;;;;;:::i;6392:905:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6392:905:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:169:6;;;:::i;7428:2115:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7428:2115:12;;;;;;;;;;;;;;;;;;:::i;1267:1181:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1267:1181:5;;;;;;;;;;;;;;;;;;:::i;4437:119:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4437:119:1;;;;:::i;437:135:6:-;;;:::i;4669:140:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4669:140:2;;-1:-1:-1;;;;;4669:140:2;;;;;;;;:::i;794:174:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:174:10;-1:-1:-1;;;;;794:174:10;;:::i;1367:741:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1367:741:12;;;;;;;;;;;;;;;;;;:::i;359:117:7:-;443:26;;;;420:5;443:26;;;:14;:26;;;;;;;;359:117::o;511:578::-;272:29;;;593:4;272:29;;;:17;:29;;;;;;572:10;;254:15;:47;245:90;;;;;-1:-1:-1;;;;;245:90:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:18:::1;645:25;659:10;645:13;:25::i;:::-;640:30;;:1;:30;636:227;;;698:33;708:10;720;698:9;:33::i;:::-;685:46;;636:227;;;765:25;779:10;765:13;:25::i;:::-;760:30;;:1;:30;756:107;;;818:34;829:10;841;818;:34::i;:::-;805:47;;756:107;880:45;895:10;124:8;907:10;:17;880:14;:45::i;:::-;:51;;927:4;880:51;872:60;;;::::0;::::1;;942:64;948:10;960;972:33;982:10;994;972:9;:33::i;:::-;942:5;:64::i;:::-;1016:66;1023:10;1035;1047:34;1058:10;1070;1047;:34::i;:::-;1016:6;:66::i;:::-;345:1;511:578:::0;;;;:::o;4267:576:12:-;4410:20;;;;;;;:8;:20;;;;;:27;4347:16;;;;4398:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4398:40:12;-1:-1:-1;4375:63:12;-1:-1:-1;4448:12:12;;4470:344;4491:20;;;;;;;:8;:20;;;;;:27;4487:31;;4470:344;;;4542:20;;;;;;;:8;:20;;;;;:23;;4563:1;;4542:23;;;;;;;;;;;;;;:32;:23;;;;;:32;;;;:40;;:32;:40;:91;;;;-1:-1:-1;4586:47:12;;;:20;;;;:8;:20;;;;;:23;;4607:1;;4586:23;;;;;;;;;;;;;;;;;;;:33;;;:47;4542:91;:142;;;;-1:-1:-1;4637:47:12;:20;;;;;;;:8;:20;;;;;:23;;:47;;;;4658:1;;4637:23;;;;;;;;;;;;;;;;;;;:33;;;;;;:47;4542:142;4538:266;;;4722:20;;;;;;;:8;:20;;;;;:23;;4743:1;;4722:23;;;;;;;;;;;;;;;;:36;;;4704:6;4711:7;4704:15;;;;;;;;;;;;;;;;;:54;4776:9;;;;;4538:266;4520:3;;4470:344;;;-1:-1:-1;4830:6:12;;4267:576;-1:-1:-1;;;;4267:576:12:o;4490:121:2:-;4579:25;;4553:7;4579:25;;;:13;:25;;;;;;;4490:121::o;2526:89:6:-;2579:4;614:5:10;;-1:-1:-1;;;;;614:5:10;600:10;:19;592:28;;;;;;-1:-1:-1;2601:7:6::1;::::0;2526:89;:::o;580:73:3:-;642:4;;580:73;:::o;1694:323:6:-;1763:10;1731:11;1745:29;;;:17;:29;;;;;;;;1940:33;;;;1983:27;;1745:29;;1763:10;1983:27;;;;;1745:29;;1983:27;1731:11;1983:27;1745:29;1763:10;1983:27;;;;;;;;;;;;;;;;;;;;;1694:323;:::o;2041:293::-;614:5:10;;-1:-1:-1;;;;;614:5:10;600:10;:19;592:28;;;;;;2106:7:6::1;::::0;;2092:11:::1;2279::::0;;;;2300:27:::1;::::0;2106:7;;2300:10:::1;::::0;:27;::::1;;;::::0;2106:7;;2300:27;;2092:11;2300:27;2106:7;2300:10;:27;::::1;;;;;;;;;;;;;::::0;::::1;;;;2367:127:::0;2453:10;2405:4;2435:29;;;:17;:29;;;;;;2367:127;:::o;4614:138:1:-;-1:-1:-1;;;;;4715:18:1;;4689:7;4715:18;;;:9;:18;;;;;;;;:30;;;;;;;;;;;4614:138;;;;:::o;586:75:4:-;649:5;;586:75;:::o;211:20:10:-;;;-1:-1:-1;;;;;211:20:10;;:::o;5605:747:12:-;5728:4;5695:10;5707;945::5;:15;;959:1;945:15;941:127;;;982:29;;;;;;;:17;:29;;;;;;1015:15;-1:-1:-1;982:48:5;974:84;;;;;-1:-1:-1;;;;;974:84:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;974:84:5;;;;;;;;;;;;;;;1080:10;:15;;1094:1;1080:15;1076:128;;;1117:30;;;;;;;:18;:30;;;;;;1151:15;-1:-1:-1;1117:49:5;1109:85;;;;;-1:-1:-1;;;;;1109:85:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1109:85:5;;;;;;;;;;;;;;;5743:17:12::1;5763:38;5770:10;5782;5794:6;5763;:38::i;:::-;5743:58:::0;-1:-1:-1;;;;;;5814:23:12;::::1;::::0;5811:513:::1;;5860:42;5872:10;5884:9;5895:6;5860:11;:42::i;:::-;:50;;5906:4;5860:50;5852:59;;;::::0;::::1;;5929:10;:15;;5943:1;5929:15;5925:174;;;5973:5;::::0;5963:43:::1;::::0;-1:-1:-1;;;;;5973:5:12::1;5980:10;5992::::0;5973:5;5963:9:::1;:43::i;:::-;6024:20;::::0;::::1;;::::0;;;:8:::1;:20;::::0;;;;;;;6050:33;;;;::::1;::::0;;;;;;6067:15:::1;6050:33:::0;;::::1;::::0;;;6024:60;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;5925:174:::1;6118:10;:15;;6132:1;6118:15;6114:175;;;6163:5;::::0;6152:44:::1;::::0;-1:-1:-1;;;;;6163:5:12::1;6170:10;6182::::0;6163:5;6152:10:::1;:44::i;:::-;6215:19;::::0;::::1;;::::0;;;:7:::1;:19;::::0;;;;;;;6240:33;;;;::::1;::::0;;;;;;6257:15:::1;6240:33:::0;;::::1;::::0;;;6215:59;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;6114:175:::1;6309:4;6302:11;;;;;5811:513;6340:5;6333:12;;;1212:1:5;5605:747:12::0;;;;;;;:::o;2265:1964::-;2436:4;2403:10;2415;945::5;:15;;959:1;945:15;941:127;;;982:29;;;;;;;:17;:29;;;;;;1015:15;-1:-1:-1;982:48:5;974:84;;;;;-1:-1:-1;;;;;974:84:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;974:84:5;;;;;;;;;;;;;;;1080:10;:15;;1094:1;1080:15;1076:128;;;1117:30;;;;;;;:18;:30;;;;;;1151:15;-1:-1:-1;1117:49:5;1109:85;;;;;-1:-1:-1;;;;;1109:85:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1109:85:5;;;;;;;;;;;;;;;2451:13:12::1;2474:10:::0;2538:6:::1;2533:1605;2567:10;2554:24;::::0;;;:12:::1;:24;::::0;;;;;;;:36:::1;::::0;::::1;::::0;;;;;;;:43;2550:47;::::1;2533:1605;;;2639:10;2626:24;::::0;;;:12:::1;:24;::::0;;;;;;;:36:::1;::::0;::::1;::::0;;;;;;;:39;;2663:1;;2626:39;::::1;;;;;;;;;;;;;2618:47;;2727:10;2683:8;:20;2692:10;2683:20;;;;;;;;;;;;;;;2704:5;2683:27;;;;;;;;;;;;;;;;;;:40;;;:54;:109;;;;-1:-1:-1::0;2741:51:12::1;::::0;::::1;:20;::::0;;;:8:::1;:20;::::0;;;;:27;;2762:5;;2741:27;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:37:::0;::::1;;:51;2683:109;:168;;;;-1:-1:-1::0;2796:55:12::1;:20:::0;;::::1;;::::0;;;:8:::1;:20;::::0;;;;:27;;:55;;::::1;::::0;2817:5;;2796:27;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:37:::0;::::1;::::0;::::1;;;:55;2683:168;2679:1449;;;2870:20;::::0;::::1;2909:5;2870:20:::0;;;:8:::1;:20;::::0;;;;:27;;2891:5;;2870:27;::::1;;;;;;;;;;;;;;;:36;;;:44;;;;;;;;;;;;;;;;;;2933:14;:26;2948:10;-1:-1:-1::0;;;;;2933:26:12::1;-1:-1:-1::0;;;;;2933:26:12::1;;;;;;;;;;;;:38;2960:10;2933:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:10;:15;;3010:1;2996:15;2992:232;;;3045:5;::::0;3035:43:::1;::::0;-1:-1:-1;;;;;3045:5:12::1;3052:10;3064::::0;3045:5;3035:9:::1;:43::i;:::-;2992:232;;;3123:10;:15;;3137:1;3123:15;3119:105;;;3172:5;::::0;3161:44:::1;::::0;-1:-1:-1;;;;;3172:5:12::1;3179:10;3191::::0;3172:5;3161:10:::1;:44::i;:::-;3246:53;::::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;;::::1;3356:10;:15;;3370:1;3356:15;3352:232;;;3417:5;::::0;3395:43:::1;::::0;3405:10:::1;::::0;-1:-1:-1;;;;;3417:5:12::1;3424:10:::0;3417:5;3395:9:::1;:43::i;:::-;3352:232;;;3483:10;:15;;3497:1;3483:15;3479:105;;;3544:5;::::0;3521:44:::1;::::0;3532:10:::1;::::0;-1:-1:-1;;;;;3544:5:12::1;3551:10:::0;3544:5;3521:10:::1;:44::i;:::-;3601:8;:20;3610:10;3601:20;;;;;;;;;;;;;;;3627:57;;;;;;;;3635:10;3627:57;;;;;;3647:10;3627:57;;;;;;3659:10;-1:-1:-1::0;;;;;3627:57:12::1;;;;;3671:6;3627:57;;;;3679:4;3627:57;;;;::::0;3601:84:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3601:84:12::1;;;;;-1:-1:-1::0;;;;;3601:84:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3738:1;3708:8;:20;3717:10;3708:20;;;;;;;;;;;;;;;:27;;;;:31;3703:36;;3757:14;:26;3772:10;-1:-1:-1::0;;;;;3757:26:12::1;-1:-1:-1::0;;;;;3757:26:12::1;;;;;;;;;;;;:38;3784:10;3757:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3861:2;3815:12;:24;3828:10;-1:-1:-1::0;;;;;3815:24:12::1;-1:-1:-1::0;;;;;3815:24:12::1;;;;;;;;;;;;:36;3840:10;3815:36;;;;;;;;;;;;;;;3852:5;3815:43;;;;;;;;;;;;;;;:48;;;;3964:4;3957:11;;;;;;;2679:1449;4005:10:::0;4001:127:::1;;4074:9;::::0;::::1;::::0;;;::::1;4108:5;4101:12;;;;;;;4001:127;2599:3;;2533:1605;;;-1:-1:-1::0;4152:47:12::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;;::::1;4217:5;4210:12;;;;1212:1:5;2265:1964:12::0;;;;;;;;;:::o;2483:775:5:-;782:30;;;;;;;;:18;:30;;;;;;2587:16;;2566:10;;782:30;:39;774:79;;;;;-1:-1:-1;;;;;774:79:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;774:79:5;;;;;;;;;;;;;;;2655:20:::1;::::0;::::1;;::::0;;;:8:::1;:20;::::0;;;;:27;2615:23:::1;::::0;2641:42:::1;::::0;::::1;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2641:42:5::1;;2615:68;;2693:8;2711:16:::0;2741:10:::1;:15;;2755:1;2741:15;2737:133;;;-1:-1:-1::0;2785:1:5::1;2737:133;;;2815:10;:15;;2829:1;2815:15;2811:59;;;-1:-1:-1::0;2858:1:5::1;2811:59;2885:6;2880:349;2901:20;::::0;::::1;;::::0;;;:8:::1;:20;::::0;;;;:27;2897:31;::::1;2880:349;;;2952:47;::::0;::::1;:20;::::0;;;:8:::1;:20;::::0;;;;:23;;2973:1;;2952:23;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:33:::0;::::1;;:47;:91:::0;::::1;;;-1:-1:-1::0;3003:20:5::1;::::0;::::1;;::::0;;;:8:::1;:20;::::0;;;;:23;;3024:1;;3003:23;::::1;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:40;;3039:4;3003:40;;;2952:91;:142;;;;-1:-1:-1::0;3047:47:5::1;:20:::0;;::::1;;::::0;;;:8:::1;:20;::::0;;;;:23;;:47;;::::1;::::0;3068:1;;3047:23;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:33:::0;::::1;::::0;::::1;;;:47;2952:142;2948:271;;;3140:20;::::0;::::1;;::::0;;;:8:::1;:20;::::0;;;;:23;;3161:1;;3140:23;::::1;;;;;;;;;;;;;;;:36;;;3128:8;:49;3114:6;3121:3;3114:11;;;;;;;;;::::0;;::::1;::::0;;;;;:63;3195:5:::1;::::0;;::::1;::::0;2948:271:::1;2930:3;;2880:349;;;-1:-1:-1::0;3245:6:5;;2483:775;-1:-1:-1;;;;;;2483:775:5:o;6392:905:12:-;6613:20;;;;;;;:8;:20;;;;;:27;6460:25;;;;;;;;;;6599:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6599:42:12;-1:-1:-1;6690:20:12;;;;;;;:8;:20;;;;;:27;6573:68;;-1:-1:-1;6651:22:12;;6676:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6676:42:12;-1:-1:-1;6768:19:12;;;;;;;:7;:19;;;;;:26;6651:67;;-1:-1:-1;6728:23:12;;6754:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6754:41:12;-1:-1:-1;6844:19:12;;;;;;;:7;:19;;;;;:26;6728:67;;-1:-1:-1;6805:22:12;;6830:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6830:41:12;-1:-1:-1;6805:66:12;-1:-1:-1;6895:2:12;6881:179;6902:20;;;;;;;:8;:20;;;;;:27;6899:30;;6881:179;;;6962:20;;;;;;;:8;:20;;;;;:23;;6983:1;;6962:23;;;;;;;;;;;;;;;;:29;;;6950:6;6957:1;6950:9;;;;;;;;;;;;;:41;;;;;7016:8;:20;7025:10;7016:20;;;;;;;;;;;;;;;7037:1;7016:23;;;;;;;;;;;;;;;;;;:33;;;7005:5;7011:1;7005:8;;;;;;;;;;;;;;;;;:44;6932:3;;6881:179;;;-1:-1:-1;7082:2:12;7069:175;7089:19;;;;;;;:7;:19;;;;;:26;7086:29;;7069:175;;;7148:19;;;;;;;:7;:19;;;;;:22;;7168:1;;7148:22;;;;;;;;;;;;;;;;:28;;;7136:6;7143:1;7136:9;;;;;;;;;;;;;:40;;;;;7201:7;:19;7209:10;7201:19;;;;;;;;;;;;;;;7221:1;7201:22;;;;;;;;;;;;;;;;;;:32;;;7190:5;7196:1;7190:8;;;;;;;;;;;;;;;;;:43;7118:3;;7069:175;;;-1:-1:-1;7261:6:12;;7269:5;;-1:-1:-1;7269:5:12;-1:-1:-1;7261:6:12;;-1:-1:-1;6392:905:12;-1:-1:-1;;;6392:905:12:o;262:169:6:-;377:10;312:4;359:29;;;:17;:29;;;;;;:44;;393:9;359:33;:44::i;:::-;345:10;327:29;;;;:17;:29;;;;;:76;-1:-1:-1;420:4:6;262:169;:::o;7428:2115:12:-;782:30:5;;;;7586:4:12;782:30:5;;;:18;:30;;;;;;7586:4:12;;7529:10;;782:30:5;:39;774:79;;;;;-1:-1:-1;;;;;774:79:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;774:79:5;;;;;;;;;;;;;;;7553:10:12::1;7565;945::5;:15;;959:1;945:15;941:127;;;982:29;::::0;::::1;;::::0;;;:17:::1;:29;::::0;;;;;1015:15:::1;-1:-1:-1::0;982:48:5::1;974:84;;;::::0;;-1:-1:-1;;;;;974:84:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;974:84:5;;;;;;;;;;;;;::::1;;1080:10;:15;;1094:1;1080:15;1076:128;;;1117:30;::::0;::::1;;::::0;;;:18:::1;:30;::::0;;;;;1151:15:::1;-1:-1:-1::0;1117:49:5::1;1109:85;;;::::0;;-1:-1:-1;;;;;1109:85:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;1109:85:5;;;;;;;;;;;;;::::1;;7601:17:12::2;7641:10:::0;7661:16;7691:10:::2;:15;;7705:1;7691:15;7687:133;;;-1:-1:-1::0;7735:1:12::2;7687:133;;;7765:10;:15;;7779:1;7765:15;7761:59;;;-1:-1:-1::0;7808:1:12::2;7761:59;7843:6;7838:406;7859:20;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;:27;7855:31;::::2;7838:406;;;7910:47;::::0;::::2;:20;::::0;;;:8:::2;:20;::::0;;;;:23;;7931:1;;7910:23;::::2;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:33:::0;::::2;;:47;:91:::0;::::2;;;-1:-1:-1::0;7961:20:12::2;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;:23;;7982:1;;7961:23;::::2;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:40;;7997:4;7961:40;;;7910:91;:159;;;;-1:-1:-1::0;8005:20:12::2;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;:23;;8045:8:::2;:24:::0;;::::2;::::0;8005:20;8026:1;;8005:23;::::2;;;;;;;;;;;;;;;:36;;;:64;7910:159;:210;;;;-1:-1:-1::0;8073:47:12::2;:20:::0;;::::2;;::::0;;;:8:::2;:20;::::0;;;;:23;;:47;;::::2;::::0;8094:1;;8073:23;::::2;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:33:::0;::::2;::::0;::::2;;;:47;7910:210;7906:328;;;8179:20;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;:23;;8148:1;;-1:-1:-1;8148:1:12;;;;8179:23;::::2;;;;;;::::0;;;::::2;::::0;;;:33:::2;:23;::::0;;::::2;;:33;::::0;-1:-1:-1;;;;;8179:33:12::2;::::0;-1:-1:-1;7906:328:12::2;7888:3;;7838:406;;;-1:-1:-1::0;;;;;;8256:23:12;::::2;8253:64;;8301:5;8294:12;;;;;;;8253:64;8365:41;8379:10;8391:14;8365:13;:41::i;:::-;:47;;8408:4;8365:47;8357:72;;;::::0;;-1:-1:-1;;;;;8357:72:12;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;8357:72:12;;;;;;;;;;;;;::::2;;8447:51;8461:9;8482:14;8473:8;:23;8447:13;:51::i;:::-;:57;;8500:4;8447:57;8439:81;;;::::0;;-1:-1:-1;;;;;8439:81:12;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;8439:81:12;;;;;;;;;;;;;::::2;;8534:10;:15;;8548:1;8534:15;8530:425;;;8565:20;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;;;;8591:41;;;;::::2;::::0;;;;;8616:15:::2;8591:41:::0;;::::2;::::0;;;8565:68;;::::2;::::0;;::::2;::::0;;;;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;::::2;::::0;;;;8647:19;;;:7:::2;:19:::0;;;;;8672:52;;;;::::2;::::0;;;8681:8:::2;:25:::0;;::::2;8672:52:::0;;;;::::2;::::0;;;8647:78;;;;::::2;::::0;;;;;;;;;;;;;;::::2;;::::0;;;;;;::::2;::::0;8530:425:::2;;;8754:10;:15;;8768:1;8754:15;8750:205;;;8784:19;::::0;::::2;;::::0;;;:7:::2;:19;::::0;;;;;;;8809:41;;;;::::2;::::0;;;;;8834:15:::2;8809:41:::0;;::::2;::::0;;;8784:67;;::::2;::::0;;::::2;::::0;;;;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;::::2;::::0;;;;8865:20;;;:8:::2;:20:::0;;;;;8891:52;;;;::::2;::::0;;;8900:8:::2;:25:::0;;::::2;8891:52:::0;;;;::::2;::::0;;;8865:79;;;;::::2;::::0;;;;;;;;;;;;;;::::2;;::::0;;;;;;::::2;::::0;8750:205:::2;8991:10;:15;;9005:1;8991:15;8987:369;;;9022:46;9042:10;9054;9066:1;9022:19;:46::i;:::-;9101:20;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;:27;;9082:72:::2;::::0;9101:20;9122:5;;9101:27;::::2;;;;;;::::0;;;::::2;::::0;;;:37:::2;:27;::::0;;::::2;;:37;::::0;-1:-1:-1;;;;;9101:37:12::2;9140:10:::0;9101:37;9082:18:::2;:72::i;:::-;8987:369;;;9183:10;:15;;9197:1;9183:15;9179:177;;;9213:45;9232:10;9244;9256:1;9213:18;:45::i;:::-;9292:20;::::0;::::2;;::::0;;;:8:::2;:20;::::0;;;;:27;;9272:73:::2;::::0;9292:20;9313:5;;9292:27;::::2;;;;;;::::0;;;::::2;::::0;;;:37:::2;:27;::::0;;::::2;;:37;::::0;-1:-1:-1;;;;;9292:37:12::2;9331:10:::0;9292:37;9272:19:::2;:73::i;:::-;9365:20;::::0;::::2;9404:5;9365:20:::0;;;:8:::2;:20;::::0;;;;:27;;9386:5;;9365:27;::::2;;;;;;::::0;;;::::2;::::0;;;:36:::2;:27;::::0;;::::2;;:36:::0;;;::::2;:44:::0;;;::::2;;-1:-1:-1::0;;;9365:44:12::2;-1:-1:-1::0;;;;;;9365:44:12;;::::2;::::0;;;::::2;::::0;;;-1:-1:-1;;;;;9419:25:12;;::::2;::::0;;;:14:::2;:25:::0;;;;;;9365:44:::2;9419:37:::0;::::2;::::0;;;;;;;;;:45;;-1:-1:-1;;9419:45:12::2;::::0;;9481:22;;;:11:::2;:22:::0;;;;;:34;;;;;;;9474:41;;;;-1:-1:-1;;;;;1212:1:5::2;863::::1;;7428:2115:12::0;;;;;;:::o;1267:1181:5:-;782:30;;;;1414:4;782:30;;;:18;:30;;;;;;1414:4;;1357:10;;782:30;:39;774:79;;;;;-1:-1:-1;;;;;774:79:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;774:79:5;;;;;;;;;;;;;;;1381:10:::1;1393;945;:15;;959:1;945:15;941:127;;;982:29;::::0;::::1;;::::0;;;:17:::1;:29;::::0;;;;;1015:15:::1;-1:-1:-1::0;982:48:5::1;974:84;;;::::0;;-1:-1:-1;;;;;974:84:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;974:84:5;;;;;;;;;;;;;::::1;;1080:10;:15;;1094:1;1080:15;1076:128;;;1117:30;::::0;::::1;;::::0;;;:18:::1;:30;::::0;;;;;1151:15:::1;-1:-1:-1::0;1117:49:5::1;1109:85;;;::::0;;-1:-1:-1;;;;;1109:85:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;1109:85:5;;;;;;;;;;;;;::::1;;1468:10:::2;1429;1453:26:::0;;;:14:::2;:26;::::0;;;;;;;:38:::2;::::0;;::::2;::::0;;;;;;;::::2;1449:993;;1551:10;1536:26;::::0;;;:14:::2;:26;::::0;;;;;;;:38:::2;::::0;;::::2;::::0;;;;;;;;;;1520:72;;;;;1536:38;::::2;:47;1520:72:::0;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;-1:-1:-1;;;;;1520:72:5;;;;;::::2;::::0;;;;;;;::::2;-1:-1:-1::0;1606:20:5::2;::::0;;::::2;;::::0;;;:8:::2;:20;::::0;;;;;;;1632:57;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;1672:10:::2;1632:57:::0;;;;;;1684:4:::2;1632:57:::0;;;;;;1606:84;;;;::::2;::::0;;;;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;::::2;;;-1:-1:-1::0;;1606:84:5;;;::::2;-1:-1:-1::0;;1606:84:5;;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;::::2;;-1:-1:-1::0;;;1606:84:5::2;-1:-1:-1::0;;;;;;;;;;;1606:84:5;;;::::2;-1:-1:-1::0;;;;;;1606:84:5;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;1709:27;;1754:23;;;:11:::2;:23:::0;;;;;:35;;;;;;;;-1:-1:-1;;1709:31:5;;;;1754:40;;1808:26;;;:14:::2;:26:::0;;;;;:38;;;;;;;;;:45;;;;::::2;::::0;::::2;::::0;;1684:4;-1:-1:-1;1867:11:5::2;;1449:993;1956:10;1941:26;::::0;;;:14:::2;:26;::::0;;;;;;;:38:::2;::::0;;::::2;::::0;;;;;;;;;;1925:75;;;;;1941:38;::::2;:47;1925:75:::0;;::::2;::::0;;;;;;;;;;;::::2;::::0;;;;-1:-1:-1;;;;;1925:75:5;;;;;::::2;::::0;;;;;;;::::2;-1:-1:-1::0;2031:10:5::2;2019:23;::::0;;;:11:::2;:23;::::0;;;;;;;:35:::2;::::0;::::2;::::0;;;;;;;;2068:8:::2;:20:::0;;;;;:24;;2019:35;;:23;:35;;2068:24;::::2;;;;;;;;;;;;;;;:33;;;:41;;;;;;;;;;;;;;;;;;2160:10;2123:8;:20;2132:10;2123:20;;;;;;;;;;;;;;;2144:2;2123:24;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;:47:::0;;-1:-1:-1;;2123:47:5::2;;::::0;;::::2;;::::0;;2184:20;;::::2;::::0;;:8:::2;:20:::0;;;;;;:24;;2221:10;;2184:20;2205:2;;2184:24;::::2;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;:47:::0;;-1:-1:-1;;2184:47:5::2;;;::::0;;::::2;;;::::0;;2245:20;;::::2;::::0;;:8:::2;:20:::0;;;;;;:24;;2285:6;;2245:20;2266:2;;2245:24;::::2;;;;;;;;;;;;;;;:37;;:46;;;;2342:10;2305:8;:20;2314:10;2305:20;;;;;;;;;;;;;;;2326:2;2305:24;;;;;;;;;;;;;;;;;;:34;;;:47;;;;;-1:-1:-1::0;;;;;2305:47:5::2;;;;;-1:-1:-1::0;;;;;2305:47:5::2;;;;;;2402:4;2366:8;:20;2375:10;2366:20;;;;;;;;;;;;;;;2387:2;2366:24;;;;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;2427:4;2420:11;;;;;4437:119:1::0;4525:24;;4499:7;4525:24;;;:12;:24;;;;;;;4437:119::o;437:135:6:-;497:4;614:5:10;;-1:-1:-1;;;;;614:5:10;600:10;:19;592:28;;;;;;522:7:6::1;::::0;:22:::1;::::0;534:9:::1;522:11;:22::i;:::-;512:7;:32:::0;-1:-1:-1;561:4:6::1;437:135:::0;:::o;4669:140:2:-;-1:-1:-1;;;;;4771:19:2;;4745:7;4771:19;;;:10;:19;;;;;;;;:31;;;;;;;;;;;4669:140;;;;:::o;794:174:10:-;614:5;;-1:-1:-1;;;;;614:5:10;600:10;:19;592:28;;;;;;-1:-1:-1;;;;;870:22:10;::::1;862:31;;;::::0;::::1;;925:5;::::0;;904:37:::1;::::0;-1:-1:-1;;;;;904:37:10;;::::1;::::0;925:5;::::1;::::0;904:37:::1;::::0;::::1;947:5;:16:::0;;-1:-1:-1;;;;;;947:16:10::1;-1:-1:-1::0;;;;;947:16:10;;;::::1;::::0;;;::::1;::::0;;794:174::o;1367:741:12:-;1490:4;1457:10;1469;945::5;:15;;959:1;945:15;941:127;;;982:29;;;;;;;:17;:29;;;;;;1015:15;-1:-1:-1;982:48:5;974:84;;;;;-1:-1:-1;;;;;974:84:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;974:84:5;;;;;;;;;;;;;;;1080:10;:15;;1094:1;1080:15;1076:128;;;1117:30;;;;;;;:18;:30;;;;;;1151:15;-1:-1:-1;1117:49:5;1109:85;;;;;-1:-1:-1;;;;;1109:85:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1109:85:5;;;;;;;;;;;;;;;1528:10:12::1;1513:26;::::0;;;:14:::1;:26;::::0;;;;;;;:38:::1;::::0;;::::1;::::0;;;;;;;;1555:2:::1;1513:38:::0;::::1;:44;;1505:79;;;::::0;;-1:-1:-1;;;;;1505:79:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1626:10;1650;:15;;1664:1;1650:15;1646:191;;;1702:5;::::0;1680:43:::1;::::0;1690:10:::1;::::0;-1:-1:-1;;;;;1702:5:12::1;1709:10:::0;1702:5;1680:9:::1;:43::i;:::-;1646:191;;;1752:10;:15;;1766:1;1752:15;1748:89;;;1805:5;::::0;1782:44:::1;::::0;1793:10:::1;::::0;-1:-1:-1;;;;;1805:5:12::1;1812:10:::0;1805:5;1782:10:::1;:44::i;:::-;1846:8;:20;1855:10;1846:20;;;;;;;;;;;;;;;1872:57;;;;;;;;1880:10;1872:57;;;;;;1892:10;1872:57;;;;;;1904:10;-1:-1:-1::0;;;;;1872:57:12::1;;;;;1916:6;1872:57;;;;1924:4;1872:57;;;;::::0;1846:84:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1846:84:12::1;;;;;-1:-1:-1::0;;;;;1846:84:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1974:1;1945:8;:20;1954:10;1945:20;;;;;;;;;;;;;;;:27;;;;:30;1940:35;;1985:14;:26;2000:10;-1:-1:-1::0;;;;;1985:26:12::1;-1:-1:-1::0;;;;;1985:26:12::1;;;;;;;;;;;;:38;2012:10;1985:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:12;:24;2048:10;-1:-1:-1::0;;;;;2035:24:12::1;-1:-1:-1::0;;;;;2035:24:12::1;;;;;;;;;;;;:36;2060:10;2035:36;;;;;;;;;;;;;;;2077:2;2035:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:4;2090:11;;;1367:741:::0;;;;;;;:::o;1405:283:6:-;1476:4;1510:6;1499:7;;:17;;1491:61;;;;;-1:-1:-1;;;;;1491:61:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:7;;:19;;1584:6;1572:11;:19::i;:::-;1562:7;:29;-1:-1:-1;;;;;1626:22:6;;;;;;:17;:22;;;;;;:34;;1653:6;1626:26;:34::i;:::-;-1:-1:-1;;;;;1601:22:6;;;;;;:17;:22;;;;;:59;-1:-1:-1;1677:4:6;1405:283;;;;:::o;10603:483:1:-;-1:-1:-1;;;;;10696:21:1;;10688:67;;;;-1:-1:-1;;;;;10688:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10862:80;10897:6;10862:80;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10862:18:1;;;;;;:9;:18;;;;;;;;:30;;;;;;;;;;;;:80;:34;:80::i;:::-;-1:-1:-1;;;;;10829:18:1;;;;;;:9;:18;;;;;;;;:30;;;;;;;;;;:113;;;;10979:12;:24;;;;:36;;11008:6;10979:28;:36::i;:::-;10952:24;;;;;;;:12;:24;;;;;;;;:63;;;;11030:49;;;;;;;;;;;;10952:24;;-1:-1:-1;;;;;11030:49:1;;;-1:-1:-1;;;;;;;;;;;11030:49:1;;;;;;;;;;10603:483;;;:::o;10790:489:2:-;-1:-1:-1;;;;;10884:21:2;;10876:67;;;;-1:-1:-1;;;;;10876:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11051:81;11087:6;11051:81;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11051:19:2;;;;;;:10;:19;;;;;;;;:31;;;;;;;;;;;;:81;:35;:81::i;:::-;-1:-1:-1;;;;;11017:19:2;;;;;;:10;:19;;;;;;;;:31;;;;;;;;;;:115;;;;11170:13;:25;;;;:37;;11200:6;11170:29;:37::i;:::-;11142:25;;;;;;;:13;:25;;;;;;;;:65;;;;11222:50;;;;;;;;;;;;11142:25;;-1:-1:-1;;;;;11222:50:2;;;-1:-1:-1;;;;;;;;;;;11222:50:2;;;;;;;;;;10790:489;;;:::o;4849:650:12:-;4936:7;4954:17;4986:6;4981:484;5002:20;;;;;;;:8;:20;;;;;:27;4998:31;;4981:484;;;5053:20;;;;;;;:8;:20;;;;;:23;;5074:1;;5053:23;;;;;;;;;;;;;;:32;:23;;;;;:32;;;;:40;;:32;:40;5049:406;;;5116:47;;;:20;;;;:8;:20;;;;;:23;;5137:1;;5116:23;;;;;;;;;;;;;;;;;;;:33;;;:47;:98;;;;-1:-1:-1;5167:47:12;:20;;;;;;;:8;:20;;;;;:23;;:47;;;;5188:1;;5167:23;;;;;;;;;;;;;;;;;;;:33;;;;;;:47;5116:98;:148;;;;-1:-1:-1;5218:20:12;;;;;;;:8;:20;;;;;:23;;5258:6;;5218:20;5239:1;;5218:23;;;;;;;;;;;;;;;;:36;;;:46;5116:148;5112:329;;;5299:20;;;;;;;:8;:20;;;;;:23;;5320:1;;5299:23;;;;;;;;;;;;;;;;:33;;;;;;;;;;-1:-1:-1;;;;;5299:33:12;5287:45;;5361:8;:20;5370:10;5361:20;;;;;;;;;;;;;;;5382:1;5361:23;;;;;;;;;;;;;;;;;;;;5354:30;;-1:-1:-1;;;;;;5354:30:12;;;;;;;;;;;;;;-1:-1:-1;;5354:30:12;;;-1:-1:-1;5413:9:12;-1:-1:-1;5406:16:12;;5112:329;5031:3;;4981:484;;;;5490:1;5475:17;;;4849:650;;;;;;:::o;613:336:6:-;-1:-1:-1;;;;;720:24:6;;697:4;720:24;;;:17;:24;;;;;;:34;-1:-1:-1;720:34:6;712:67;;;;;-1:-1:-1;;;;;712:67:6;;;;;;;;;;;;-1:-1:-1;;;;;712:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;816:24:6;;;;;;:17;:24;;;;;;:36;;845:6;816:28;:36::i;:::-;-1:-1:-1;;;;;789:24:6;;;;;;;:17;:24;;;;;;:63;;;;887:22;;;;;;;:34;;914:6;887:26;:34::i;:::-;-1:-1:-1;;;;;862:22:6;;;;;;:17;:22;;;;;:59;-1:-1:-1;938:4:6;613:336;;;;;:::o;8966:603:1:-;-1:-1:-1;;;;;9081:20:1;;9073:70;;;;-1:-1:-1;;;;;9073:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9161:23:1;;9153:71;;;;-1:-1:-1;;;;;9153:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:83;9362:6;9328:83;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9328:17:1;;;;;;:9;:17;;;;;;;;:29;;;;;;;;;;;;:83;:33;:83::i;:::-;-1:-1:-1;;;;;9296:17:1;;;;;;;:9;:17;;;;;;;;:29;;;;;;;;;;;;:115;;;;9456:20;;;;;;;;;;;:32;;;;;;;;;;:44;;9493:6;9456:36;:44::i;:::-;-1:-1:-1;;;;;9421:20:1;;;;;;;:9;:20;;;;;;;;:32;;;;;;;;;;;;;:79;;;;9515:47;;;;;;;;;;;;9421:20;;9515:47;;;;-1:-1:-1;;;;;;;;;;;9515:47:1;;;;;;;;8966:603;;;;:::o;9141:609:2:-;-1:-1:-1;;;;;9257:20:2;;9249:70;;;;-1:-1:-1;;;;;9249:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9337:23:2;;9329:71;;;;-1:-1:-1;;;;;9329:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9505:84;9540:6;9505:84;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9505:18:2;;;;;;:10;:18;;;;;;;;:30;;;;;;;;;;;;:84;:34;:84::i;:::-;-1:-1:-1;;;;;9472:18:2;;;;;;;:10;:18;;;;;;;;:30;;;;;;;;;;;;:117;;;;9635:21;;;;;;;;;;;:33;;;;;;;;;;:45;;9673:6;9635:37;:45::i;:::-;-1:-1:-1;;;;;9599:21:2;;;;;;;:10;:21;;;;;;;;:33;;;;;;;;;;;;;:81;;;;9695:48;;;;;;;;;;;;9599:21;;9695:48;;;;-1:-1:-1;;;;;;;;;;;9695:48:2;;;;;;;;9141:609;;;;:::o;877:176:11:-;935:7;966:5;;;989:6;;;;981:46;;;;;-1:-1:-1;;;;;981:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:294:6;-1:-1:-1;;;;;1115:24:6;;1092:4;1115:24;;;:17;:24;;;;;;:34;-1:-1:-1;1115:34:6;1107:67;;;;;-1:-1:-1;;;;;1107:67:6;;;;;;;;;;;;-1:-1:-1;;;;;1107:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1211:24:6;;;;;;:17;:24;;;;;;:36;;1240:6;1211:28;:36::i;:::-;-1:-1:-1;;;;;1184:24:6;;;;;;:17;:24;;;;;:63;1267:7;;:19;;1279:6;1267:11;:19::i;:::-;1257:7;:29;-1:-1:-1;1303:4:6;1020:294;;;;:::o;493:244:13:-;587:59;622:1;626:10;638:7;587:26;:59::i;:::-;681:34;687:6;695:10;707:7;681:5;:34::i;:::-;493:244;;;:::o;502:245:9:-;595:60;631:1;635:10;647:7;595:27;:60::i;:::-;690:35;697:6;705:10;717:7;690:6;:35::i;1324:134:11:-;1382:7;1408:43;1412:1;1415;1408:43;;;;;;;;;;;;;;;;;1749:187;1835:7;1870:12;1862:6;;;;1854:29;;;;-1:-1:-1;;;;;1854:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1905:5:11;;;1749:187::o;831:392:3:-;-1:-1:-1;;;;;932:18:3;;928:289;;1034:4;;993:37;1023:6;993:25;1007:10;993:13;:25::i;:::-;:29;;:37::i;:::-;:45;989:121;;;1058:30;;;;;;;:18;:30;;;;;:37;;-1:-1:-1;;1058:37:3;1091:4;1058:37;;;989:121;1172:4;;1131:37;1161:6;1131:25;1145:10;1131:13;:25::i;:37::-;:45;;1123:83;;;;;-1:-1:-1;;;;;1123:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;9840:443:1;-1:-1:-1;;;;;9933:21:1;;9925:65;;;;;-1:-1:-1;;;;;9925:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;10091:24;;;;;;;:12;:24;;;;;;:36;;10120:6;10091:28;:36::i;:::-;10064:24;;;;;;;:12;:24;;;;;;;;:63;;;;-1:-1:-1;;;;;10170:18:1;;;;:9;:18;;;;;:30;;;;;;;;;:42;;10205:6;10170:34;:42::i;:::-;-1:-1:-1;;;;;10137:18:1;;;;;;:9;:18;;;;;;;;:30;;;;;;;;;;;;:75;;;;10227:49;;;;;;;;;;;;;10137:18;;;;-1:-1:-1;;;;;;;;;;;10227:49:1;;;;;;;;;9840:443;;;:::o;839:399:4:-;-1:-1:-1;;;;;942:18:4;;938:294;;1045:5;;1003:38;1034:6;1003:26;1018:10;1003:14;:26::i;:38::-;:47;999:124;;;1070:31;;;;;;;:19;:31;;;;;:38;;-1:-1:-1;;1070:38:4;1104:4;1070:38;;;999:124;1186:5;;1144:38;1175:6;1144:26;1159:10;1144:14;:26::i;10021:449:2:-;-1:-1:-1;;;;;10115:21:2;;10107:65;;;;;-1:-1:-1;;;;;10107:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;10274:25;;;;;;;:13;:25;;;;;;:37;;10304:6;10274:29;:37::i;:::-;10246:25;;;;;;;:13;:25;;;;;;;;:65;;;;-1:-1:-1;;;;;10355:19:2;;;;:10;:19;;;;;:31;;;;;;;;;:43;;10391:6;10355:35;:43::i;:::-;-1:-1:-1;;;;;10321:19:2;;;;;;:10;:19;;;;;;;;:31;;;;;;;;;;;;:77;;;;10413:50;;;;;;;;;;;;;10321:19;;;;-1:-1:-1;;;;;;;;;;;10413:50:2;;;;;;;;;10021:449;;;:::o",
  "source": "pragma solidity ^0.7.0;\nimport \"./tokenTrade.sol\";\n\ncontract Exchange is TokenTrade {\n    uint256 constant private REWARD = 1*10**18;\n    mapping (uint8 => uint8) internal _winnerTokenOf;\n\n    modifier expirationCheck(uint8 _market_id){\n        require (block.timestamp > _expirationDateOf[_market_id], \"the result is not happend yet\");\n        _;\n    }\n\n    function winnerTokenOf(uint8 _market_id) public view returns(uint8){\n        return _winnerTokenOf[_market_id];\n    }\n    //exchange token for eth.\n    function exchange(uint8 _market_id) external expirationCheck(_market_id) returns (bool){\n        uint256 tokenCount;\n        if (1 == winnerTokenOf(_market_id)){\n            tokenCount = balanceOf(msg.sender, _market_id);\n        }\n        else if (2 == winnerTokenOf(_market_id)){\n            tokenCount = balanceOf1(msg.sender, _market_id);\n        }\n        require(rewardTransfer(msg.sender, tokenCount*REWARD)==true);\n        _burn(msg.sender, _market_id, balanceOf(msg.sender, _market_id));\n        _burn1(msg.sender, _market_id, balanceOf1(msg.sender, _market_id));\n    }\n\n}\n\n",
  "sourcePath": "/home/jisoo/pet-projects/Prediction_market/back/contracts/exchange.sol",
  "ast": {
    "absolutePath": "/home/jisoo/pet-projects/Prediction_market/back/contracts/exchange.sol",
    "exportedSymbols": {
      "Exchange": [
        1576
      ]
    },
    "id": 1577,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1455,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/home/jisoo/pet-projects/Prediction_market/back/contracts/tokenTrade.sol",
        "file": "./tokenTrade.sol",
        "id": 1456,
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 3348,
        "src": "24:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1457,
              "name": "TokenTrade",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3347,
              "src": "73:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenTrade_$3347",
                "typeString": "contract TokenTrade"
              }
            },
            "id": 1458,
            "nodeType": "InheritanceSpecifier",
            "src": "73:10:7"
          }
        ],
        "contractDependencies": [
          354,
          644,
          730,
          816,
          1203,
          1453,
          1955,
          2015,
          3347,
          3405
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1576,
        "linearizedBaseContracts": [
          1576,
          3347,
          1203,
          1453,
          1955,
          816,
          644,
          3405,
          730,
          354,
          2015
        ],
        "name": "Exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1465,
            "mutability": "constant",
            "name": "REWARD",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1576,
            "src": "90:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1459,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "90:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 1464,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 1460,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "124:1:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1463,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 1461,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "126:2:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 1462,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "130:2:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "126:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "124:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1469,
            "mutability": "mutable",
            "name": "_winnerTokenOf",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1576,
            "src": "138:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint8_$",
              "typeString": "mapping(uint8 => uint8)"
            },
            "typeName": {
              "id": 1468,
              "keyType": {
                "id": 1466,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "147:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "138:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_uint8_$",
                "typeString": "mapping(uint8 => uint8)"
              },
              "valueType": {
                "id": 1467,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "156:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1484,
              "nodeType": "Block",
              "src": "235:118:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1474,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "254:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "254:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1476,
                            "name": "_expirationDateOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "272:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                              "typeString": "mapping(uint8 => uint256)"
                            }
                          },
                          "id": 1478,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1477,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1471,
                            "src": "290:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "272:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "254:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686520726573756c74206973206e6f742068617070656e6420796574",
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "303:31:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f247bc7de6a53fc1f76c27627c31d8f5341fef2958e4160f31f0323f48cdf98",
                          "typeString": "literal_string \"the result is not happend yet\""
                        },
                        "value": "the result is not happend yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f247bc7de6a53fc1f76c27627c31d8f5341fef2958e4160f31f0323f48cdf98",
                          "typeString": "literal_string \"the result is not happend yet\""
                        }
                      ],
                      "id": 1473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "245:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "245:90:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "245:90:7"
                },
                {
                  "id": 1483,
                  "nodeType": "PlaceholderStatement",
                  "src": "345:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 1485,
            "name": "expirationCheck",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "mutability": "mutable",
                  "name": "_market_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1485,
                  "src": "218:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "217:18:7"
            },
            "src": "193:160:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "426:50:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1492,
                      "name": "_winnerTokenOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "443:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_uint8_$",
                        "typeString": "mapping(uint8 => uint8)"
                      }
                    },
                    "id": 1494,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1493,
                      "name": "_market_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "458:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "443:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1491,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "436:33:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "12e85cc1",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winnerTokenOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "_market_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1497,
                  "src": "382:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "381:18:7"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1497,
                  "src": "420:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "419:7:7"
            },
            "scope": 1576,
            "src": "359:117:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1574,
              "nodeType": "Block",
              "src": "598:491:7",
              "statements": [
                {
                  "assignments": [
                    1508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1508,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1574,
                      "src": "608:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "608:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:18:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "640:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1512,
                          "name": "_market_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1499,
                          "src": "659:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1511,
                        "name": "winnerTokenOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1497,
                        "src": "645:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint8) view returns (uint8)"
                        }
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "645:25:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "640:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "760:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1526,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "779:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1525,
                          "name": "winnerTokenOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1497,
                          "src": "765:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_uint8_$",
                            "typeString": "function (uint8) view returns (uint8)"
                          }
                        },
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "765:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "760:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 1538,
                    "nodeType": "IfStatement",
                    "src": "756:107:7",
                    "trueBody": {
                      "id": 1537,
                      "nodeType": "Block",
                      "src": "791:72:7",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 1529,
                              "name": "tokenCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "805:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1531,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "829:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "829:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1533,
                                  "name": "_market_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1499,
                                  "src": "841:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1530,
                                "name": "balanceOf1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 457,
                                "src": "818:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint8) view returns (uint256)"
                                }
                              },
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "818:34:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "805:47:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1536,
                          "nodeType": "ExpressionStatement",
                          "src": "805:47:7"
                        }
                      ]
                    }
                  },
                  "id": 1539,
                  "nodeType": "IfStatement",
                  "src": "636:227:7",
                  "trueBody": {
                    "id": 1523,
                    "nodeType": "Block",
                    "src": "671:71:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1515,
                            "name": "tokenCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "685:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1517,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "708:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "708:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1519,
                                "name": "_market_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1499,
                                "src": "720:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1516,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "698:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                                "typeString": "function (address,uint8) view returns (uint256)"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "698:33:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "685:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1522,
                        "nodeType": "ExpressionStatement",
                        "src": "685:46:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1542,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "895:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "895:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1544,
                                "name": "tokenCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "907:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1545,
                                "name": "REWARD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1465,
                                "src": "918:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "907:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1541,
                            "name": "rewardTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1379,
                            "src": "880:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "880:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "927:4:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "880:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "872:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "872:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "948:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "948:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1555,
                        "name": "_market_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "960:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1557,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "982:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "982:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1559,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "994:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1556,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "972:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                            "typeString": "function (address,uint8) view returns (uint256)"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "972:33:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1552,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "942:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint256)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "942:64:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1023:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1023:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1566,
                        "name": "_market_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "1035:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1568,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1058:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1058:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1570,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "1070:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1567,
                          "name": "balanceOf1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1047:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                            "typeString": "function (address,uint8) view returns (uint256)"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1047:34:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1563,
                      "name": "_burn1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "1016:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint256)"
                      }
                    },
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:66:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "15f42ce9",
            "id": 1575,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1502,
                    "name": "_market_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1499,
                    "src": "572:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1503,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1501,
                  "name": "expirationCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1485,
                  "src": "556:15:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint8_$",
                    "typeString": "modifier (uint8)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "556:27:7"
              }
            ],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1499,
                  "mutability": "mutable",
                  "name": "_market_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1575,
                  "src": "529:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "528:18:7"
            },
            "returnParameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1575,
                  "src": "593:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "592:6:7"
            },
            "scope": 1576,
            "src": "511:578:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1577,
        "src": "52:1040:7"
      }
    ],
    "src": "0:1094:7"
  },
  "legacyAST": {
    "absolutePath": "/home/jisoo/pet-projects/Prediction_market/back/contracts/exchange.sol",
    "exportedSymbols": {
      "Exchange": [
        1576
      ]
    },
    "id": 1577,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1455,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/home/jisoo/pet-projects/Prediction_market/back/contracts/tokenTrade.sol",
        "file": "./tokenTrade.sol",
        "id": 1456,
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 3348,
        "src": "24:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1457,
              "name": "TokenTrade",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3347,
              "src": "73:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenTrade_$3347",
                "typeString": "contract TokenTrade"
              }
            },
            "id": 1458,
            "nodeType": "InheritanceSpecifier",
            "src": "73:10:7"
          }
        ],
        "contractDependencies": [
          354,
          644,
          730,
          816,
          1203,
          1453,
          1955,
          2015,
          3347,
          3405
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1576,
        "linearizedBaseContracts": [
          1576,
          3347,
          1203,
          1453,
          1955,
          816,
          644,
          3405,
          730,
          354,
          2015
        ],
        "name": "Exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1465,
            "mutability": "constant",
            "name": "REWARD",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1576,
            "src": "90:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1459,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "90:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 1464,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 1460,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "124:1:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1463,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 1461,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "126:2:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 1462,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "130:2:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "126:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "124:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1469,
            "mutability": "mutable",
            "name": "_winnerTokenOf",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1576,
            "src": "138:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint8_$",
              "typeString": "mapping(uint8 => uint8)"
            },
            "typeName": {
              "id": 1468,
              "keyType": {
                "id": 1466,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "147:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "138:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_uint8_$",
                "typeString": "mapping(uint8 => uint8)"
              },
              "valueType": {
                "id": 1467,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "156:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1484,
              "nodeType": "Block",
              "src": "235:118:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1474,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "254:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "254:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1476,
                            "name": "_expirationDateOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "272:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                              "typeString": "mapping(uint8 => uint256)"
                            }
                          },
                          "id": 1478,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1477,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1471,
                            "src": "290:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "272:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "254:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686520726573756c74206973206e6f742068617070656e6420796574",
                        "id": 1480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "303:31:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f247bc7de6a53fc1f76c27627c31d8f5341fef2958e4160f31f0323f48cdf98",
                          "typeString": "literal_string \"the result is not happend yet\""
                        },
                        "value": "the result is not happend yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f247bc7de6a53fc1f76c27627c31d8f5341fef2958e4160f31f0323f48cdf98",
                          "typeString": "literal_string \"the result is not happend yet\""
                        }
                      ],
                      "id": 1473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "245:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "245:90:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "245:90:7"
                },
                {
                  "id": 1483,
                  "nodeType": "PlaceholderStatement",
                  "src": "345:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 1485,
            "name": "expirationCheck",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "mutability": "mutable",
                  "name": "_market_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1485,
                  "src": "218:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "217:18:7"
            },
            "src": "193:160:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "426:50:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1492,
                      "name": "_winnerTokenOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
                      "src": "443:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_uint8_$",
                        "typeString": "mapping(uint8 => uint8)"
                      }
                    },
                    "id": 1494,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1493,
                      "name": "_market_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "458:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "443:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1491,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "436:33:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "12e85cc1",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winnerTokenOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "_market_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1497,
                  "src": "382:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "381:18:7"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1497,
                  "src": "420:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "419:7:7"
            },
            "scope": 1576,
            "src": "359:117:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1574,
              "nodeType": "Block",
              "src": "598:491:7",
              "statements": [
                {
                  "assignments": [
                    1508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1508,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1574,
                      "src": "608:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "608:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:18:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "640:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1512,
                          "name": "_market_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1499,
                          "src": "659:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1511,
                        "name": "winnerTokenOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1497,
                        "src": "645:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint8) view returns (uint8)"
                        }
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "645:25:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "640:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "760:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1526,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "779:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1525,
                          "name": "winnerTokenOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1497,
                          "src": "765:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_uint8_$",
                            "typeString": "function (uint8) view returns (uint8)"
                          }
                        },
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "765:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "760:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 1538,
                    "nodeType": "IfStatement",
                    "src": "756:107:7",
                    "trueBody": {
                      "id": 1537,
                      "nodeType": "Block",
                      "src": "791:72:7",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 1529,
                              "name": "tokenCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "805:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1531,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "829:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "829:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1533,
                                  "name": "_market_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1499,
                                  "src": "841:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1530,
                                "name": "balanceOf1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 457,
                                "src": "818:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint8) view returns (uint256)"
                                }
                              },
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "818:34:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "805:47:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1536,
                          "nodeType": "ExpressionStatement",
                          "src": "805:47:7"
                        }
                      ]
                    }
                  },
                  "id": 1539,
                  "nodeType": "IfStatement",
                  "src": "636:227:7",
                  "trueBody": {
                    "id": 1523,
                    "nodeType": "Block",
                    "src": "671:71:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1515,
                            "name": "tokenCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "685:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1517,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "708:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "708:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1519,
                                "name": "_market_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1499,
                                "src": "720:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1516,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "698:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                                "typeString": "function (address,uint8) view returns (uint256)"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "698:33:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "685:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1522,
                        "nodeType": "ExpressionStatement",
                        "src": "685:46:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1542,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "895:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "895:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1544,
                                "name": "tokenCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "907:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1545,
                                "name": "REWARD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1465,
                                "src": "918:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "907:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1541,
                            "name": "rewardTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1379,
                            "src": "880:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "880:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "927:4:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "880:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "872:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "872:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "948:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "948:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1555,
                        "name": "_market_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "960:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1557,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "982:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "982:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1559,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "994:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1556,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "972:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                            "typeString": "function (address,uint8) view returns (uint256)"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "972:33:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1552,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "942:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint256)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "942:64:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1023:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1023:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1566,
                        "name": "_market_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "1035:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1568,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1058:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1058:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1570,
                            "name": "_market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1499,
                            "src": "1070:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1567,
                          "name": "balanceOf1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1047:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_uint256_$",
                            "typeString": "function (address,uint8) view returns (uint256)"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1047:34:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1563,
                      "name": "_burn1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "1016:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint256)"
                      }
                    },
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:66:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "15f42ce9",
            "id": 1575,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1502,
                    "name": "_market_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1499,
                    "src": "572:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1503,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1501,
                  "name": "expirationCheck",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1485,
                  "src": "556:15:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint8_$",
                    "typeString": "modifier (uint8)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "556:27:7"
              }
            ],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1499,
                  "mutability": "mutable",
                  "name": "_market_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1575,
                  "src": "529:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "528:18:7"
            },
            "returnParameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1575,
                  "src": "593:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "592:6:7"
            },
            "scope": 1576,
            "src": "511:578:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1577,
        "src": "52:1040:7"
      }
    ],
    "src": "0:1094:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-07T00:43:27.590Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint8)": {
        "details": "See {IERC20-balanceOf}."
      },
      "balanceOf1(address,uint8)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "cap1()": {
        "details": "Returns the cap on the token's total supply."
      },
      "totalSupplyOf(uint8)": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalSupplyOf1(uint8)": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}